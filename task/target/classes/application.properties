server.port=9090
server.servlet.context-path=/task

#Database Properties
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://${POSTGRES_DB_HOST:localhost}:${POSTGRES_DB_PORT:5432}/${POSTGRES_DB_NAME:task}?currentSchema=${POSTGRES_DB_SCHEMA:public}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${POSTGRES_DB_USERNAME:postgres}
spring.datasource.password=${POSTGRES_DB_PASSWORD:1234}
spring.datasource.hikari.maximum-pool-size=${DB_MAX_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${DB_IDLE_TIMEOUT:5000}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

keycloak.realm = task
keycloak.auth-server-url = http://localhost:8180/auth
keycloak.resource = springbootkeycloack
keycloak.public-client = true
keycloak.bearer-only = true

spring.security.oauth2.client.registration.oauth2-client-credentials.client-id=springbootkeycloack
spring.security.oauth2.client.registration.oauth2-client-credentials.client-secret=030bab6d-2719-4109-aeb4-9859092dcf36
spring.security.oauth2.client.registration.oauth2-client-credentials.scope=openid, profile, roles
spring.security.oauth2.client.registration.oauth2-client-credentials.authorization-grant-type=password
spring.security.oauth2.client.registration.oauth2-client-credentials.provider=keycloak

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8180/auth/realms/task
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8180/auth/realms/task/protocol/openid-connect/token


